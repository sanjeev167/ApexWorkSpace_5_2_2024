/*
 * Created on 2025-01-24 ( 16:50:06 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.3.0
 */
package com.nus.fileupload.entities;

import java.io.Serializable;
import java.util.Date;

import com.nus.pvt.master.entities.ProjectCodeMstr;
import com.nus.sec.entities.ApexUser;

import jakarta.persistence.*;

/**
 * JPA entity class for "ConsolidatedDeliveryRisk"
 *
 * @author Telosys
 *
 */
@Entity
@Table(name="consolidated_delivery_risk", schema="public" )
public class ConsolidatedDeliveryRisk implements Serializable {

    private static final long serialVersionUID = 1L;

    //--- ENTITY PRIMARY KEY 
    @Id
    @GeneratedValue(strategy=GenerationType.IDENTITY)
    @Column(name="id", nullable=false)
    private Integer    id ;

    //--- ENTITY DATA FIELDS 
    @Column(name="risk_type", nullable=true, length=50)
    private String     riskType ;

    @Column(name="source", nullable=true, length=50)
    private String     source ;

    @Column(name="risk_main_category", nullable=true, length=2147483647)
    private String     riskMainCategory ;

    @Column(name="risk_sub_category", nullable=true, length=2147483647)
    private String     riskSubCategory ;

    @Column(name="occuring_probablity", nullable=true, length=50)
    private String     occuringProbablity ;

    @Column(name="impact", length=50)
    private String     impact ;

    @Column(name="risk_priority_number")
    private Double     riskPriorityNumber ;

    @Column(name="risk_exposure")
    private Double     riskExposure ;

    @Column(name="response_resolution_startegy", length=50)
    private String     responseResolutionStartegy ;

    @Column(name="risk_owner", length=50)
    private String     riskOwner ;

    @Column(name="migration_plan", length=2000)
    private String     migrationPlan ;

    @Column(name="contigency_plan", length=1000)
    private String     contigencyPlan ;

    @Column(name="risk_status", length=25)
    private String     riskStatus ;

    @Column(name="remark", length=1000)
    private String     remark ;

    @Column(name="project_code_id")
    private Integer    projectCodeId ;

    @Column(name="risk_for_month")
    private Integer    riskForMonth ;

    @Column(name="risk_for_year")
    private Integer    riskForYear ;

    @Column(name="created_by")
    private Integer    createdBy ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created_on")
    private Date       createdOn ;

    @Column(name="modified_by")
    private Integer    modifiedBy ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="modified_on")
    private Date       modifiedOn ;

    @Column(name="active_c", length=1)
    private String     activeC ;


    //--- ENTITY LINKS ( RELATIONSHIP )
    @ManyToOne
    @JoinColumn(name="created_by", referencedColumnName="id", insertable=false, updatable=false)
    private ApexUser   apexUser ; 

    @ManyToOne
    @JoinColumn(name="product_code_id", referencedColumnName="id", insertable=false, updatable=false)
    private ProjectCodeMstr projectCodeMstr ; 

    @ManyToOne
    @JoinColumn(name="modified_by", referencedColumnName="id", insertable=false, updatable=false)
    private ApexUser   apexUser2 ; 


    /**
     * Constructor
     */
    public ConsolidatedDeliveryRisk() {
		super();
    }
    
    public ConsolidatedDeliveryRisk(Integer month, Integer year, int userId, String activeC) {
		this.riskForMonth = month;
		this.riskForYear = year;
		this.createdBy = userId;
		this.activeC = activeC;
		this.createdOn = new Date();
	}

	//--- GETTERS & SETTERS FOR FIELDS
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    public void setRiskType( String riskType ) {
        this.riskType = riskType ;
    }
    public String getRiskType() {
        return this.riskType;
    }

    public void setSource( String source ) {
        this.source = source ;
    }
    public String getSource() {
        return this.source;
    }

    public void setRiskMainCategory( String riskMainCategory ) {
        this.riskMainCategory = riskMainCategory ;
    }
    public String getRiskMainCategory() {
        return this.riskMainCategory;
    }

    public void setRiskSubCategory( String riskSubCategory ) {
        this.riskSubCategory = riskSubCategory ;
    }
    public String getRiskSubCategory() {
        return this.riskSubCategory;
    }

    public void setOccuringProbablity( String occuringProbablity ) {
        this.occuringProbablity = occuringProbablity ;
    }
    public String getOccuringProbablity() {
        return this.occuringProbablity;
    }

    public void setImpact( String impact ) {
        this.impact = impact ;
    }
    public String getImpact() {
        return this.impact;
    }

    public void setRiskPriorityNumber( Double riskPriorityNumber ) {
        this.riskPriorityNumber = riskPriorityNumber ;
    }
    public Double getRiskPriorityNumber() {
        return this.riskPriorityNumber;
    }

    public void setRiskExposure( Double riskExposure ) {
        this.riskExposure = riskExposure ;
    }
    public Double getRiskExposure() {
        return this.riskExposure;
    }

    public void setResponseResolutionStartegy( String responseResolutionStartegy ) {
        this.responseResolutionStartegy = responseResolutionStartegy ;
    }
    public String getResponseResolutionStartegy() {
        return this.responseResolutionStartegy;
    }

    public void setRiskOwner( String riskOwner ) {
        this.riskOwner = riskOwner ;
    }
    public String getRiskOwner() {
        return this.riskOwner;
    }

    public void setMigrationPlan( String migrationPlan ) {
        this.migrationPlan = migrationPlan ;
    }
    public String getMigrationPlan() {
        return this.migrationPlan;
    }

    public void setContigencyPlan( String contigencyPlan ) {
        this.contigencyPlan = contigencyPlan ;
    }
    public String getContigencyPlan() {
        return this.contigencyPlan;
    }

    public void setRiskStatus( String riskStatus ) {
        this.riskStatus = riskStatus ;
    }
    public String getRiskStatus() {
        return this.riskStatus;
    }

    public void setRemark( String remark ) {
        this.remark = remark ;
    }
    public String getRemark() {
        return this.remark;
    }

    public void setProjectCodeId( Integer projectCodeId ) {
        this.projectCodeId = projectCodeId ;
    }
    public Integer getProjectCodeId() {
        return this.projectCodeId;
    }

    public void setRiskForMonth( Integer riskForMonth ) {
        this.riskForMonth = riskForMonth ;
    }
    public Integer getRiskForMonth() {
        return this.riskForMonth;
    }

    public void setRiskForYear( Integer riskForYear ) {
        this.riskForYear = riskForYear ;
    }
    public Integer getRiskForYear() {
        return this.riskForYear;
    }

    public void setCreatedBy( Integer createdBy ) {
        this.createdBy = createdBy ;
    }
    public Integer getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedOn( Date createdOn ) {
        this.createdOn = createdOn ;
    }
    public Date getCreatedOn() {
        return this.createdOn;
    }

    public void setModifiedBy( Integer modifiedBy ) {
        this.modifiedBy = modifiedBy ;
    }
    public Integer getModifiedBy() {
        return this.modifiedBy;
    }

    public void setModifiedOn( Date modifiedOn ) {
        this.modifiedOn = modifiedOn ;
    }
    public Date getModifiedOn() {
        return this.modifiedOn;
    }

    public void setActiveC( String activeC ) {
        this.activeC = activeC ;
    }
    public String getActiveC() {
        return this.activeC;
    }

    //--- GETTERS FOR LINKS
    public ApexUser getApexUser() {
        return this.apexUser;
    } 

    public ProjectCodeMstr getProjectCodeMstr() {
        return this.projectCodeMstr;
    } 

    public ApexUser getApexUser2() {
        return this.apexUser2;
    } 

    //--- toString specific method
	@Override
    public String toString() { 
        StringBuilder sb = new StringBuilder(); 
        sb.append(id);
        sb.append("|");
        sb.append(riskType);
        sb.append("|");
        sb.append(source);
        sb.append("|");
        sb.append(riskMainCategory);
        sb.append("|");
        sb.append(riskSubCategory);
        sb.append("|");
        sb.append(occuringProbablity);
        sb.append("|");
        sb.append(impact);
        sb.append("|");
        sb.append(riskPriorityNumber);
        sb.append("|");
        sb.append(riskExposure);
        sb.append("|");
        sb.append(responseResolutionStartegy);
        sb.append("|");
        sb.append(riskOwner);
        sb.append("|");
        sb.append(migrationPlan);
        sb.append("|");
        sb.append(contigencyPlan);
        sb.append("|");
        sb.append(riskStatus);
        sb.append("|");
        sb.append(remark);
        sb.append("|");
        sb.append(projectCodeId);
        sb.append("|");
        sb.append(riskForMonth);
        sb.append("|");
        sb.append(riskForYear);
        sb.append("|");
        sb.append(createdBy);
        sb.append("|");
        sb.append(createdOn);
        sb.append("|");
        sb.append(modifiedBy);
        sb.append("|");
        sb.append(modifiedOn);
        sb.append("|");
        sb.append(activeC);
        return sb.toString(); 
    } 

}
