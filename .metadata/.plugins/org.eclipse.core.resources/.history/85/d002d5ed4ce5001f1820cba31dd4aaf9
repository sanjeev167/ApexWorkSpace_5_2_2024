/*
 * Created on 2025-01-24 ( 01:39:32 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.3.0
 */
package com.nus.sec.entities;

import java.io.Serializable;
import java.util.Date;
import java.util.List;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.nus.fileupload.entities.ProjectMonthlyPlcc;
import com.nus.fileupload.entities.ProjectMonthlyResourceAllocation;
import com.nus.fileupload.entities.ProjectMonthlyResourceAttrition;
import com.nus.fileupload.entities.ProjectMonthlyResourceUtilization;
import com.nus.fileupload.entities.ProjectMonthlyRrrr;
import com.nus.pvt.admin.entities.AssignDmProjectToPractice;
import com.nus.pvt.admin.entities.AssignPmProjectToDm;
import com.nus.pvt.admin.entities.AssignPracticeProjectToMgmt;
import com.nus.pvt.master.entities.ProjectVerticalMstr;

import jakarta.persistence.*;

/**
 * JPA entity class for "ApexUser"
 *
 * @author Telosys
 *
 */
@Entity
@Table(name = "apex_user", schema = "public")
public class ApexUser implements Serializable {

	private static final long serialVersionUID = 1L;

	// --- ENTITY PRIMARY KEY
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "id", nullable = false)
	private Integer id;

	// --- ENTITY DATA FIELDS
	@Column(name = "name", nullable = false, length = 100)
	private String name;

	@Column(name = "email", nullable = false, length = 100)
	private String email;

	@JsonIgnore
	@Column(name = "pwd", nullable = false, length = 100)
	private String pwd;

	@Column(name = "user_context", length = 100)
	private String userContext;
	
	@Column(name = "emp_code", length = 25)
	private String empCode;

	@JsonIgnore
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_on")
	private Date createdOn;

	@JsonIgnore
	@Column(name = "created_by")
	private Integer createdBy;

	@JsonIgnore
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "modified_on")
	private Date modifiedOn;

	@JsonIgnore
	@Column(name = "modified_by")
	private Integer modifiedBy;

	@Column(name = "active_c", nullable = false, length = 1)
	private String activeC;

	@Column(name = "user_grade_id")
	private Integer userGradeId;

	// --- ENTITY LINKS ( RELATIONSHIP )
	@JsonIgnore
	@OneToMany(mappedBy = "apexUser")
	private List<ProjectVerticalMstr> listOfProjectVerticalMstr;

	@JsonIgnore
	@OneToMany(mappedBy = "apexUser")
	private List<AssignDmProjectToPractice> listOfAssignDmProjectToPractice;

	@JsonIgnore
	@OneToMany(mappedBy = "apexUser")
	private List<ProjectMonthlyResourceUtilization> listOfProjectMonthlyResourceUtilization;

	@JsonIgnore
	@OneToMany(mappedBy = "apexUser")
	private List<MenuManager> listOfMenuManager;

	@JsonIgnore
	@OneToMany(mappedBy = "apexUser")
	private List<AssignPracticeProjectToMgmt> listOfAssignPracticeProjectToMgmt;

	@JsonIgnore
	@OneToMany(mappedBy = "apexUser")
	private List<RoleHierarchy> listOfRoleHierarchy;

	@JsonIgnore
	@OneToMany(mappedBy = "apexUser")
	private List<ApexModuleMstr> listOfApexModuleMstr;

	@JsonIgnore
	@OneToMany(mappedBy = "apexUser")
	private List<OperationAccess> listOfOperationAccess;

	@JsonIgnore
	@OneToMany(mappedBy = "apexUser")
	private List<PageMstr> listOfPageMstr;

	@JsonIgnore
	@OneToMany(mappedBy = "apexUser")
	private List<ApexRefreshToken> listOfApexRefreshToken;

	@JsonIgnore
	@OneToMany(mappedBy = "apexUser", fetch = FetchType.EAGER)
	private List<ApexUserGroup> listOfApexUserGroup;

	@JsonIgnore
	@OneToMany(mappedBy = "apexUser")
	private List<AccessRightsRbac> listOfAccessRightsRbac;

	@JsonIgnore
	@OneToMany(mappedBy = "apexUser")
	private List<ProjectMonthlyRrrr> listOfProjectMonthlyRrrr;

	@JsonIgnore
	@OneToMany(mappedBy = "apexUser")
	private List<ProjectMonthlyPlcc> listOfProjectMonthlyPlcc;

	@JsonIgnore
	@ManyToOne
	@JoinColumn(name = "user_grade_id", referencedColumnName = "id", insertable = false, updatable = false)
	private UserGrade userGrade;

	@JsonIgnore
	@OneToMany(mappedBy = "apexUser")
	private List<ProjectMonthlyResourceAttrition> listOfProjectMonthlyResourceAttrition;

	@JsonIgnore
	@OneToMany(mappedBy = "apexUser")
	private List<ProjectMonthlyResourceAllocation> listOfProjectMonthlyResourceAllocation;

	@JsonIgnore
	@OneToMany(mappedBy = "apexUser")
	private List<OperationMstr> listOfOperationMstr;

	@JsonIgnore
	@OneToMany(mappedBy = "apexUser")
	private List<AssignPmProjectToDm> listOfAssignPmProjectToDm;

	@JsonIgnore
	@OneToMany(mappedBy = "apexUser")
	private List<UserGrade> listOfUserGrade;

	@JsonIgnore
	@OneToMany(mappedBy = "apexUser")
	private List<TreeMenuTypeMstr> listOfTreeMenuTypeMstr;

	/**
	 * Constructor
	 */
	public ApexUser() {
		super();
	}

	public ApexUser(int userGradeId, Integer currentLoginUserId, String pwd, String activeC) {
		this.userGradeId = userGradeId;
		this.createdBy = currentLoginUserId;
		this.createdOn = new Date();
		this.activeC = activeC;
		this.pwd = pwd;
	}

	// --- GETTERS & SETTERS FOR FIELDS
	public void setId(Integer id) {
		this.id = id;
	}

	public Integer getId() {
		return this.id;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getName() {
		return this.name;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public String getEmail() {
		return this.email;
	}

	public void setPwd(String pwd) {
		this.pwd = pwd;
	}

	public String getPwd() {
		return this.pwd;
	}	

	/**
	 * @return the empId
	 */
	public String getEmpCode() {
		return empCode;
	}

	/**
	 * @param empId the empId to set
	 */
	public void setEmpCode(String empCode) {
		this.empCode = empCode;
	}

	public void setUserContext(String userContext) {
		this.userContext = userContext;
	}

	public String getUserContext() {
		return this.userContext;
	}

	public void setCreatedOn(Date createdOn) {
		this.createdOn = createdOn;
	}

	public Date getCreatedOn() {
		return this.createdOn;
	}

	public void setCreatedBy(Integer createdBy) {
		this.createdBy = createdBy;
	}

	public Integer getCreatedBy() {
		return this.createdBy;
	}

	public void setModifiedOn(Date modifiedOn) {
		this.modifiedOn = modifiedOn;
	}

	public Date getModifiedOn() {
		return this.modifiedOn;
	}

	public void setModifiedBy(Integer modifiedBy) {
		this.modifiedBy = modifiedBy;
	}

	public Integer getModifiedBy() {
		return this.modifiedBy;
	}

	public void setActiveC(String activeC) {
		this.activeC = activeC;
	}

	public String getActiveC() {
		return this.activeC;
	}

	public void setUserGradeId(Integer userGradeId) {
		this.userGradeId = userGradeId;
	}

	public Integer getUserGradeId() {
		return this.userGradeId;
	}

	// --- GETTERS FOR LINKS
	public List<ProjectVerticalMstr> getListOfProjectVerticalMstr() {
		return this.listOfProjectVerticalMstr;
	}

	public List<AssignDmProjectToPractice> getListOfAssignDmProjectToPractice() {
		return this.listOfAssignDmProjectToPractice;
	}

	public List<ProjectMonthlyResourceUtilization> getListOfProjectMonthlyResourceUtilization() {
		return this.listOfProjectMonthlyResourceUtilization;
	}

	public List<MenuManager> getListOfMenuManager() {
		return this.listOfMenuManager;
	}

	public List<AssignPracticeProjectToMgmt> getListOfAssignPracticeProjectToMgmt() {
		return this.listOfAssignPracticeProjectToMgmt;
	}

	public List<RoleHierarchy> getListOfRoleHierarchy() {
		return this.listOfRoleHierarchy;
	}

	public List<ApexModuleMstr> getListOfApexModuleMstr() {
		return this.listOfApexModuleMstr;
	}

	public List<OperationAccess> getListOfOperationAccess() {
		return this.listOfOperationAccess;
	}

	public List<PageMstr> getListOfPageMstr() {
		return this.listOfPageMstr;
	}

	public List<ApexRefreshToken> getListOfApexRefreshToken() {
		return this.listOfApexRefreshToken;
	}

	public List<ApexUserGroup> getListOfApexUserGroup() {
		return this.listOfApexUserGroup;
	}

	public List<AccessRightsRbac> getListOfAccessRightsRbac() {
		return this.listOfAccessRightsRbac;
	}

	public List<ProjectMonthlyRrrr> getListOfProjectMonthlyRrrr() {
		return this.listOfProjectMonthlyRrrr;
	}

	public List<ProjectMonthlyPlcc> getListOfProjectMonthlyPlcc() {
		return this.listOfProjectMonthlyPlcc;
	}

	public UserGrade getUserGrade() {
		return this.userGrade;
	}

	public List<ProjectMonthlyResourceAttrition> getListOfProjectMonthlyResourceAttrition() {
		return this.listOfProjectMonthlyResourceAttrition;
	}

	public List<ProjectMonthlyResourceAllocation> getListOfProjectMonthlyResourceAllocation() {
		return this.listOfProjectMonthlyResourceAllocation;
	}

	public List<OperationMstr> getListOfOperationMstr() {
		return this.listOfOperationMstr;
	}

	public List<AssignPmProjectToDm> getListOfAssignPmProjectToDm() {
		return this.listOfAssignPmProjectToDm;
	}

	public List<UserGrade> getListOfUserType() {
		return this.listOfUserType;
	}

	public List<TreeMenuTypeMstr> getListOfTreeMenuTypeMstr() {
		return this.listOfTreeMenuTypeMstr;
	}

	// --- toString specific method
	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append(id);
		sb.append("|");
		sb.append(name);
		sb.append("|");
		sb.append(email);
		sb.append("|");
		sb.append(pwd);
		sb.append("|");
		sb.append(userContext);
		sb.append("|");
		sb.append(createdOn);
		sb.append("|");
		sb.append(createdBy);
		sb.append("|");
		sb.append(modifiedOn);
		sb.append("|");
		sb.append(modifiedBy);
		sb.append("|");
		sb.append(activeC);
		sb.append("|");
		sb.append(userGradeId);
		return sb.toString();
	}

}
