/*
 * Created on 2025-01-30 ( 11:46:17 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.3.0
 */
package com.nus.pvt.master.entities;

import java.io.Serializable;
import java.util.Date;
import java.util.List;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.nus.pvt.admin.entities.AssignProjectToPm;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;

/**
 * JPA entity class for "ProjectCodeMstr"
 *
 * @author Telosys
 *
 */
@Entity
@Table(name="project_code_mstr", schema="public" )
public class ProjectCodeMstr implements Serializable {

    private static final long serialVersionUID = 1L;

    //--- ENTITY PRIMARY KEY 
    @JsonIgnore
    @Id
    @GeneratedValue(strategy=GenerationType.IDENTITY)
    @Column(name="id", nullable=false)
    private Integer    id ;

    //--- ENTITY DATA FIELDS 
    @Column(name="project_code", nullable=false, length=50)
    private String     projectCode ;

    @Column(name="project_name", length=100)
    private String     projectName ;

    @Column(name="client_account_id")
    private Integer    clientAccountId ;

    @Column(name="created_by")
    private Integer    createdBy ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created_on")
    private Date       createdOn ;

    @Column(name="modified_by")
    private Integer    modifiedBy ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="modified_on")
    private Date       modifiedOn ;

    @Column(name="active_c", nullable=false, length=1)
    private String     activeC ;


    //--- ENTITY LINKS ( RELATIONSHIP )
    @OneToMany(mappedBy="projectCodeMstr")
    private List<AssignProjectToPm> listOfAssignProjectToPm ; 

    @ManyToOne
    @JoinColumn(name="client_account_id", referencedColumnName="id", insertable=false, updatable=false)
    private ClientAccountMstr clientAccountMstr ; 


    /**
     * Constructor
     */
    public ProjectCodeMstr() {
		super();
    }
    
    //--- GETTERS & SETTERS FOR FIELDS
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    public void setProjectCode( String projectCode ) {
        this.projectCode = projectCode ;
    }
    public String getProjectCode() {
        return this.projectCode;
    }

    public void setProjectName( String projectName ) {
        this.projectName = projectName ;
    }
    public String getProjectName() {
        return this.projectName;
    }

    public void setClientAccountId( Integer clientAccountId ) {
        this.clientAccountId = clientAccountId ;
    }
    public Integer getClientAccountId() {
        return this.clientAccountId;
    }

    public void setCreatedBy( Integer createdBy ) {
        this.createdBy = createdBy ;
    }
    public Integer getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedOn( Date createdOn ) {
        this.createdOn = createdOn ;
    }
    public Date getCreatedOn() {
        return this.createdOn;
    }

    public void setModifiedBy( Integer modifiedBy ) {
        this.modifiedBy = modifiedBy ;
    }
    public Integer getModifiedBy() {
        return this.modifiedBy;
    }

    public void setModifiedOn( Date modifiedOn ) {
        this.modifiedOn = modifiedOn ;
    }
    public Date getModifiedOn() {
        return this.modifiedOn;
    }

    public void setActiveC( String activeC ) {
        this.activeC = activeC ;
    }
    public String getActiveC() {
        return this.activeC;
    }

    //--- GETTERS FOR LINKS
    public List<AssignProjectToPm> getListOfAssignProjectToPm() {
        return this.listOfAssignProjectToPm;
    } 

    public ClientAccountMstr getClientAccountMstr() {
        return this.clientAccountMstr;
    } 

    //--- toString specific method
	@Override
    public String toString() { 
        StringBuilder sb = new StringBuilder(); 
        sb.append(id);
        sb.append("|");
        sb.append(projectCode);
        sb.append("|");
        sb.append(projectName);
        sb.append("|");
        sb.append(clientAccountId);
        sb.append("|");
        sb.append(createdBy);
        sb.append("|");
        sb.append(createdOn);
        sb.append("|");
        sb.append(modifiedBy);
        sb.append("|");
        sb.append(modifiedOn);
        sb.append("|");
        sb.append(activeC);
        return sb.toString(); 
    } 

}
